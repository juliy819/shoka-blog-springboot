server:
  # 端口
  port: 8080

spring:
  servlet:
    multipart:
      # 文件上传大小限制
      max-file-size: 10MB
      max-request-size: 20MB

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shoka_blog?serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true
    username: juliy
    password: 123456
    druid:
      # 初始连接数
      initial-size: 10
      # 最小连接池数量
      min-idle: 10
      # 最大连接池数量
      max-active: 150
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      # 配置检测连接是否有效
      validation-query: SELECT 1 FROM DUAL
      # 配置检测连接是否有效时间
      validation-query-timeout: 500
      # 在获取连接后，确定是否要进行连接空间时间的检查
      test-while-idle: true
      # 设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
      test-on-borrow: false
      # 设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
      test-on-return: false

  data:
    # redis配置
    redis:
      # Redis服务器地址
      host: localhost
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      # password: 123456
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 150
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: 5000ms
          # 连接池中的最大空闲连接
          max-idle: 100
          # 连接池中的最小空闲连接
          min-idle: 50

  # rabbitmq配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: juliy
    password: 123456
    virtual-host: shoka-blog
    listener:
      simple:
        retry:
          enabled: true
          # 重试间隔时间
          initial-interval: 3000
          # 最大重试次数
          max-attempts: 3


  # 邮件配置
  mail:
    host: smtp.qq.com
    # 用户名
    username: 799399654@qq.com
    # 授权码
    password: foahqtxznbjkbefg

# Sa-Token 配置 (文档: https://sa-token.cc)
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token前缀
  token-prefix: juliy
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: -1
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 自动续签
  auto-renew: true
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # token风格
  token-style: uuid
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 同一账号最大登录数量
  max-login-count: 20
  # 是否从cookie中读取token
  is-read-cookie: false
  # 是否从请求体里读取token
  is-read-body: false
  # 是否从header中读取token
  is-read-header: true
  # 是否输出操作日志
  is-log: false
  # 启动时是否打印logo
  is-print: off

# mybatisPlus配置
mybatis-plus:
  # mapper映射地址
  mapper-locations: classpath:mapper/*.xml
  # 实体类扫描包路径
  type-aliases-package: com.juliy.entity
  configuration:
    # 开启驼峰命名
    map-underscore-to-camel-case: true
    # sql打印
  #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 数据库表前缀
      table-prefix: t_
    # 启动时是否打印logo
    banner: off

# 文件上传策略
upload:
  # 策略选择
  strategy: qiniu
  # 本地
  #  local:
  #    # nginx映射本地文件路径
  #    url: https://你的文件上传子域名
  #    # 本地文件存储路径
  #    path: /usr/local/upload
  # 七牛云
  qiniu:
    accessKey: zBLNJz0AMVCo24d0-Uoa00Qzh-NDkaGp_Mdwcndz
    secretKey: 4R1F6gBZVk1C-CtpH2zMf3qSLoCV_xfYHI8SyWuQ
    bucketName: juliy-blog
    region: huadong
    url: https://static.juliy.top

# 博客链接 域名后面要加/
blog:
  url: www.juliy.top/

# 线程池配置
thread:
  pool:
    core-pool-size: 5
    max-pool-size: 10
    queue-capacity: 50
    keep-alive-seconds: 60

# 日志配置
logging:
  level:
    # 日志级别
    root: warn