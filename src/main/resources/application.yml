server:
  # 端口
  port: 8080

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/juliy_blog?serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true
    username: juliy
    password: 123456
    druid:
      # 初始连接数
      initial-size: 10
      # 最小连接池数量
      min-idle: 10
      # 最大连接池数量
      max-active: 150
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      # 配置检测连接是否有效
      validation-query: SELECT 1 FROM DUAL
      # 配置检测连接是否有效时间
      validation-query-timeout: 500
      # 在获取连接后，确定是否要进行连接空间时间的检查
      test-while-idle: true
      # 设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
      test-on-borrow: false
      # 设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
      test-on-return: false

  data:
    # redis配置
    redis:
      # Redis服务器地址
      host: 你的ip
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: redis密码
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 150
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: 5000ms
          # 连接池中的最大空闲连接
          max-idle: 100
          # 连接池中的最小空闲连接
          min-idle: 50

#  springdoc:
#    swagger-ui:
#      path: /swagger-ui.html
#      tags-sorter: alpha
#      operations-sorter: alpha
#    api-docs:
#      path: /v3/api-docs
#    group-configs:
#      - group: 'default'
#        paths-to-match: '/**'
#        packages-to-scan: com.github.xiaoymin.boot3
#
#  knife4j:
#    enable: true
#    setting:
#      language: zh_cn
#      swagger-model-name: 实体类列表
#
#    documents:
#      - name: 标题1
#        locations: classpath:markdown/*
#        group: default
#      - name: 标题2
#        locations: classpath:markdown1/*
#        group: 用户模块

